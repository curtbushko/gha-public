name: build
on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      # Push events on main branch
      - main

jobs:
  get-go-version:
    name: "Determine Go toolchain version"
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Determine Go version
        id: get-go-version
        # We use .go-version as our source of truth for current Go
        # version, because "goenv" can react to it automatically.
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "::set-output name=go-version::$(cat .go-version)"


  build:
    needs: [get-go-version]
    runs-on: ubuntu-latest

    name: Go ${{ matrix.go }} ${{ matrix.goos }} ${{ matrix.goarch }} ${{ matrix.component }} build    
    steps:
      - uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}


      - name: Build
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
        working-directory: ${{ matrix.component }}
        run: |
          mkdir -p dist

          export GIT_COMMIT=$(git rev-parse --short HEAD)
          export GIT_DIRTY=$(test -n "$(git status --porcelain)" && echo "+CHANGES")
          export GOLDFLAGS="-X ${GIT_IMPORT}.GitCommit=${GIT_COMMIT}${GIT_DIRTY} -X"

          CGO_ENABLED=0 go build -o dist/hello -ldflags "${GOLDFLAGS}" .

  dispatch:
    name: Workflow Dispatch
    runs-on: ubuntu-latest
    steps:
    - uses: benc-uk/workflow-dispatch@v1.2.2
      name: private dispatch
      with:
        workflow: build
        repo: curtbushko/gha-private
        token: ${{ secrets.GHA_PRIVATE_TOKEN }}
